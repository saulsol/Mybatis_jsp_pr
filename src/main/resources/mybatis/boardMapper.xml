<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot_bit.myBatis.mapper.BoardMapper">

    <select id="getList" parameterType="com.example.springboot_bit.entity.PageInfo" resultType="com.example.springboot_bit.entity.Board">
        SELECT * FROM tblBoard ORDER BY boardGroup desc
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <insert id="insert" parameterType="com.example.springboot_bit.entity.Board">
        INSERT INTO
        tblBoard(idx, memId, title, content, writer, boardGroup, boardSequence, boardLevel, boardAvailable)

           SELECT
           IFNULL(max(idx)+1, 1),
           #{memId}, #{title}, #{content}, #{writer},
           IFNULL(max(boardGroup)+1, 0),
           0, 0, 1
           FROM tblBoard;

    </insert>

    <insert id="insertSelectKey" parameterType="com.example.springboot_bit.entity.Board">
        <selectKey keyProperty="idx,boardGroup" resultType="com.example.springboot_bit.entity.Board" order="BEFORE">
            SELECT
            IFNULL(max(idx)+1, 1) AS idx,
            IFNULL(max(boardGroup)+1, 1) AS boardGroup
            FROM tblBoard
        </selectKey>

        INSERT INTO
        tblBoard(idx, memId, title, content, writer, boardGroup, boardSequence, boardLevel, boardAvailable)
        VALUES(#{idx}, #{memId}, #{title}, #{content}, #{writer}, #{boardGroup}, 0, 0, 1)
    </insert>

    <select id="login" resultType="com.example.springboot_bit.entity.Member" parameterType="com.example.springboot_bit.entity.Member">
        SELECT * FROM tblMember WHERE memId = #{memId} AND memPwd = #{memPwd}
    </select>

    <select id="read" parameterType="Integer" resultType="com.example.springboot_bit.entity.Board">
        SELECT * FROM tblBoard WHERE idx = #{idx}
    </select>

    <update id="update" parameterType="com.example.springboot_bit.entity.Board" >
        UPDATE tblBoard SET title=#{title}, content=#{content} WHERE idx=#{idx}
    </update>

    <delete id="remove" parameterType="Integer">
        DELETE FROM tblBoard WHERE idx=#{idx}
    </delete>

    <update id="addBoardCount" parameterType="Integer">
        UPDATE tblBoard SET count=count+1 WHERE idx=#{idx}
    </update>

    <insert id="insertComment" parameterType="com.example.springboot_bit.entity.Comment">
        <selectKey keyProperty="commentId" resultType="com.example.springboot_bit.entity.Comment" order="BEFORE">
            SELECT
            IFNULL(max(commentId)+1, 1) AS commentId
            FROM Comment
        </selectKey>

        INSERT INTO comment(commentId, boardId, memId, memName, title, content)
        VALUES(#{commentId}, #{boardId}, #{memId}, #{memName}, #{title}, #{content})
    </insert>

    <select id="findByBoardId" parameterType="Integer" resultType="com.example.springboot_bit.entity.Comment">
        SELECT * FROM comment WHERE boardId = #{boardId}
    </select>

    <insert id="insertMember" parameterType="com.example.springboot_bit.entity.Member">
        INSERT INTO tblMember(memId, memPwd, memName, memPhone, memAddr)
        VALUES(#{memId}, #{memPwd}, #{memName}, #{memPhone}, #{memAddr})
    </insert>

    <select id="duplicateMemberCheck" parameterType="String" resultType="String">
        SELECT memId FROM tblMember WHERE memId = #{memId}
    </select>

    <select id="totalCount" resultType="Integer">
        SELECT count(*) FROM tblBoard
    </select>

    <select id="searchBoard" parameterType="com.example.springboot_bit.entity.SearchDto"
            resultType="com.example.springboot_bit.entity.Board">
        SELECT * FROM tblBoard WHERE (title LIKE CONCAT('%', #{search.title}, '%')
        OR content LIKE CONCAT('%', #{search.content}, '%'))
        ORDER BY idx
        LIMIT #{pageInfo.pageStart}, #{pageInfo.perPageNum}
    </select>

    <select id="searchCount" resultType="Integer"
            parameterType="com.example.springboot_bit.entity.PostSearch">

        SELECT count(*) FROM tblBoard WHERE (title LIKE CONCAT('%', #{title}, '%')
        OR content LIKE CONCAT('%', #{content}, '%'))
    </select>



</mapper>